// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // Sugihara IDEA: Using ALU    
    // Not(in=load, out=notload);
    // And(a=notreset, b=notload, out=notresetandnotload);
    // And(a=notresetandnotload, b=inc, out=zy);
    // Not(in=zy, out=notzy);
    // ALU(x=in, y[0]=true, zx=reset, nx=false, zy=notzy, ny=false, f=true, no=false, out=aluout, zr=zr, ng=ng);
    // Not(in=reset, out=notreset);
    // And(a=notreset, b=load, out=regload);
    // Register(in=aluout, load=regload, out=out);

    Inc16(in=loopback, out=incResult);
    Mux16(a=loopback, b=incResult, sel=inc, out=w0);
    Mux16(a=w0, b=in, sel=load, out=w1);
    Mux16(a=w1, b[0]=false, sel=reset, out=w2);
    Register(in=w2, load=true, out=out, out=loopback);
}
